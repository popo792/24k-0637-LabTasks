#include <iostream>
using namespace std;

#define SIZE 7

int maze[SIZE][SIZE] = {
    {1, 0, 1, 1, 1, 0, 1},
    {1, 1, 1, 0, 1, 1, 1},
    {0, 1, 0, 1, 0, 1, 0},
    {1, 1, 1, 1, 1, 0, 1},
    {0, 0, 0, 0, 1, 1, 1},
    {1, 1, 1, 0, 1, 0, 1},
    {0, 0, 1, 1, 1, 1, 1}
};

int path[SIZE][SIZE] = {0};

bool isValidMove(int row, int col) {
    return (row >= 0 && row < SIZE && col >= 0 && col < SIZE && maze[row][col] == 1);
}

bool findPath(int row, int col) {
    if (row == SIZE - 1 && col == SIZE - 1) {
        path[row][col] = 1;
        return true;
    }

    if (isValidMove(row, col)) {
        if (path[row][col] == 1) return false;
        path[row][col] = 1;

        if (findPath(row + 1, col)) return true;
        if (findPath(row, col + 1)) return true;
        if (findPath(row - 1, col)) return true;
        if (findPath(row, col - 1)) return true;

        path[row][col] = 0;
        return false;
    }
    return false;
}

void showSolution() {
    cout << "Solution Path:" << endl;
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            cout << path[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    if (findPath(0, 0)) {
        showSolution();
    } else {
        cout << "No path found!" << endl;
    }
    return 0;
}
